name: Auto Generate

on:
  workflow_dispatch:
  push:
    branches: auto-generate

env:
  version_manifest: https://piston-meta.mojang.com/mc/game/version_manifest_v2.json

jobs:
  generate:
    name: Generate
    runs-on: ubuntu-latest
    outputs:
      versions: ${{steps.data.outputs.versions}}
    steps:
      - uses: actions/checkout@v4
        with:
          path: resource-pack
      - name: Get data
        id: data
        run: |
          wget -O versions.json ${{env.version_manifest}}
          latest_release=$(jq --compact-output --join-output .latest.release versions.json)
          current_release=1.20.2
          release_url=$(jq --compact-output --join-output ".versions[] | select(.id == \"$latest_release\").url" versions.json)
          latest_snapshot=$(jq --compact-output --join-output .latest.snapshot versions.json)
          current_snapshot=0.1
          snapshot_url=$(jq --compact-output --join-output ".versions[] | select(.id == \"$latest_snapshot\").url" versions.json)

          echo 'versions=[{"current":"$current_release","new":"$latest_release","url":"$release_url"},{"current":"$current_snapshot","new":"$latest_snapshot","url":"$snapshot_url"}]' >> $GITHUB_OUTPUT

  check_version:
    name: Check Version
    needs: generate
    strategy:
      matrix:
        release_type: [release, snapshot]
    uses: ./.github/workflows/check_version.yml
    with:
      is_full_release: ${{ matrix.release_type == 'release' }}
      current_version: ${{ fromJSON(needs.generate.outputs.versions)[matrix.release_type != 'release'].current }}
      new_version: ${{ fromJSON(needs.generate.outputs.versions)[matrix.release_type != 'release'].new }}
      version_url: ${{ fromJSON(needs.generate.outputs.versions)[matrix.release_type != 'release'].url }}
